import { MigrationInterface, QueryRunner } from "typeorm";

export class UsersSchemaChanges1742021035685 implements MigrationInterface {
    name = 'UsersSchemaChanges1742021035685'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "Cart" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "totalAmount" numeric(10,2) NOT NULL DEFAULT '0', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" uuid, CONSTRAINT "PK_012c8ac0dc98012aed2f7766e01" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "Product" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "siteName" character varying, "websiteUrl" character varying, "sampleLink" character varying, "price" numeric(10,2) NOT NULL, "adjustedPrice" numeric(10,2), "language" character varying, "niche" character varying, "country" character varying, "currency" character varying, "category" text array, "productHandeledBy" character varying, "postingLink" character varying, "poststatus" "public"."Product_poststatus_enum" DEFAULT 'pending', "submittedPostUrl" character varying, "linkType" "public"."Product_linktype_enum", "maxLinkAllowed" character varying, "Wordlimit" character varying, "monthlyTraffic" integer, "domainRatings" integer, "domainAuthority" integer, "turnAroundTime" character varying, "liveTime" character varying, "siteType" "public"."Product_sitetype_enum", "isProductApprove" boolean NOT NULL DEFAULT false, "rejectionReason" character varying, "productStatus" "public"."Product_productstatus_enum" DEFAULT 'pending', "updateFields" jsonb, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "userId" uuid NOT NULL, CONSTRAINT "PK_9fc040db7872192bbc26c515710" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "Order" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "orderNumber" integer, "file" character varying, "totalAmount" numeric(10,2) NOT NULL, "contentProvidedBy" "public"."Order_contentprovidedby_enum", "orderStatus" "public"."Order_orderstatus_enum", "address_qr_code" character varying, "payer_amount" numeric, "address" character varying, "url" character varying, "payer_currency" character varying, "uuid" character varying, "expired_at" character varying, "payment_status" character varying, "handeledBy" character varying, "rejectionReason" character varying, "submissionUrl" character varying, "submissionDetails" character varying, "submissionDate" TIMESTAMP, "affiliateComission" integer, "backupEmail" character varying, "Topic" character varying, "anchorLink" character varying, "anchor" character varying, "notes" character varying, "wordLimit" "public"."Order_wordlimit_enum", "products" jsonb NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "network" character varying, "to_currency" character varying, "userId" uuid, CONSTRAINT "UQ_3ba2614fc14e07cd3c8acc40b28" UNIQUE ("orderNumber"), CONSTRAINT "PK_3d5a3861d8f9a6db372b2b317b7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "Invoice" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "amount" numeric(10,2) NOT NULL, "invoiceNumber" character varying, "walletAddress" character varying, "currency" character varying NOT NULL, "InvoiceStatus" "public"."Invoice_invoicestatus_enum" DEFAULT 'pending', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "adminApprovalDate" TIMESTAMP WITH TIME ZONE, "superAdminPayoutDate" TIMESTAMP WITH TIME ZONE, "rejectionReason" character varying, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "withdrawalRequestId" uuid, "approvedBy" uuid, CONSTRAINT "REL_f05e43ea24cbacc2068c678194" UNIQUE ("withdrawalRequestId"), CONSTRAINT "PK_0ead03cb5a20e5a5cc4d6defbe6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "Withdrawl" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "publisherID" character varying, "publisherEmail" character varying, "amount" numeric(10,2) NOT NULL, "withdrawlStatus" "public"."Withdrawl_withdrawlstatus_enum" DEFAULT 'pending', "currency" character varying, "approvalDate" TIMESTAMP, "isPayoutGenerated" boolean NOT NULL DEFAULT false, "walletAddress" character varying, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "deletedAt" TIMESTAMP WITH TIME ZONE, "isDeleted" boolean NOT NULL DEFAULT false, "approvedBy" uuid, "userId" uuid NOT NULL, "invoiceId" uuid, CONSTRAINT "UQ_153821b36542763a30692db2036" UNIQUE ("publisherID"), CONSTRAINT "REL_ee9c18798293d109902e4fd54e" UNIQUE ("invoiceId"), CONSTRAINT "PK_1230f90871f52e1787d7d1acfdd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "User" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "firstName" character varying NOT NULL, "lastName" character varying NOT NULL, "email" character varying NOT NULL, "password" character varying, "role" "public"."User_role_enum" DEFAULT 'user', "phoneNo" character varying, "country" character varying, "currency" character varying, "ownsSite" boolean NOT NULL DEFAULT false, "numberOfSites" integer, "hasDoFollowLinks" boolean NOT NULL DEFAULT false, "sellingArticles" boolean NOT NULL DEFAULT false, "sellingArticlesUrl" character varying, "businessName" character varying, "businessType" character varying, "walletAddress" character varying, "walletBalance" integer, "referralCode" character varying NOT NULL, "isaffiliateRequested" boolean NOT NULL DEFAULT false, "isAffiliate" boolean NOT NULL DEFAULT false, "isApproved" boolean NOT NULL DEFAULT false, "approvedby" character varying, "otp" integer, "otpExpiresAt" TIMESTAMP WITH TIME ZONE, "isVerified" boolean NOT NULL DEFAULT false, "monthlyBudget" integer, "referedBy" character varying, "permissions" text, "comissions" character varying, "resetPasswordToken" character varying, "resetPasswordExpiresAt" TIMESTAMP, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), CONSTRAINT "UQ_4a257d2c9837248d70640b3e36e" UNIQUE ("email"), CONSTRAINT "UQ_423823b23d072b7bc6c2dd3eb85" UNIQUE ("phoneNo"), CONSTRAINT "UQ_ed04d5d41d2cd8390d331c1dd0e" UNIQUE ("referralCode"), CONSTRAINT "PK_9862f679340fb2388436a5ab3e4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "OrderInvoice" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "publisherName" character varying, "orderNumber" character varying NOT NULL, "amount" numeric(10,2) NOT NULL, "invoiceNumber" character varying NOT NULL, "currency" character varying, "orderInvoice" "public"."OrderInvoice_orderinvoice_enum" DEFAULT 'pending', "publisherApprovalDate" TIMESTAMP WITH TIME ZONE, "rejectionReason" character varying, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), "userId" uuid, "approvedById" uuid, CONSTRAINT "UQ_2e5e8c76af784ef175c2012cb71" UNIQUE ("invoiceNumber"), CONSTRAINT "PK_20461bad36d55f98cc076ef8617" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "Payment" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "amount" numeric(10,2) NOT NULL, "status" "public"."Payment_status_enum" NOT NULL DEFAULT 'pending', "requestedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "processedAt" TIMESTAMP WITH TIME ZONE, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "userId" uuid NOT NULL, CONSTRAINT "PK_07e9fb9a8751923eb876d57a575" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "cart_products_product" ("cartId" uuid NOT NULL, "productId" uuid NOT NULL, CONSTRAINT "PK_785ab9c1dbede19ef42bf12280b" PRIMARY KEY ("cartId", "productId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_e6ce39be5d354954a88ded1eba" ON "cart_products_product" ("cartId") `);
        await queryRunner.query(`CREATE INDEX "IDX_0fc996e42b6330c97f8cffbddf" ON "cart_products_product" ("productId") `);
        await queryRunner.query(`ALTER TABLE "Cart" ADD CONSTRAINT "FK_c93d6f0ae7b8bcae9439e871ab1" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Product" ADD CONSTRAINT "FK_de75905c3b4987f4b5bb1472644" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Order" ADD CONSTRAINT "FK_cdc25a0a42e8f451020a26680b3" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Invoice" ADD CONSTRAINT "FK_f05e43ea24cbacc2068c6781941" FOREIGN KEY ("withdrawalRequestId") REFERENCES "Withdrawl"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Invoice" ADD CONSTRAINT "FK_5c062b82eeffa12acf4b80729ed" FOREIGN KEY ("approvedBy") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" ADD CONSTRAINT "FK_a2c7069b3e34a0e14baae96ac66" FOREIGN KEY ("approvedBy") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" ADD CONSTRAINT "FK_6b5b98920e2299173e948db2c20" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" ADD CONSTRAINT "FK_ee9c18798293d109902e4fd54e1" FOREIGN KEY ("invoiceId") REFERENCES "Invoice"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "OrderInvoice" ADD CONSTRAINT "FK_b4df24ba3eebe03fa33c49e1e0b" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "OrderInvoice" ADD CONSTRAINT "FK_dd494c211a7a86be1e6327f61cd" FOREIGN KEY ("approvedById") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Payment" ADD CONSTRAINT "FK_7a1045559464dd2ed4fc9587cc1" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cart_products_product" ADD CONSTRAINT "FK_e6ce39be5d354954a88ded1ebac" FOREIGN KEY ("cartId") REFERENCES "Cart"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "cart_products_product" ADD CONSTRAINT "FK_0fc996e42b6330c97f8cffbddfa" FOREIGN KEY ("productId") REFERENCES "Product"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "cart_products_product" DROP CONSTRAINT "FK_0fc996e42b6330c97f8cffbddfa"`);
        await queryRunner.query(`ALTER TABLE "cart_products_product" DROP CONSTRAINT "FK_e6ce39be5d354954a88ded1ebac"`);
        await queryRunner.query(`ALTER TABLE "Payment" DROP CONSTRAINT "FK_7a1045559464dd2ed4fc9587cc1"`);
        await queryRunner.query(`ALTER TABLE "OrderInvoice" DROP CONSTRAINT "FK_dd494c211a7a86be1e6327f61cd"`);
        await queryRunner.query(`ALTER TABLE "OrderInvoice" DROP CONSTRAINT "FK_b4df24ba3eebe03fa33c49e1e0b"`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" DROP CONSTRAINT "FK_ee9c18798293d109902e4fd54e1"`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" DROP CONSTRAINT "FK_6b5b98920e2299173e948db2c20"`);
        await queryRunner.query(`ALTER TABLE "Withdrawl" DROP CONSTRAINT "FK_a2c7069b3e34a0e14baae96ac66"`);
        await queryRunner.query(`ALTER TABLE "Invoice" DROP CONSTRAINT "FK_5c062b82eeffa12acf4b80729ed"`);
        await queryRunner.query(`ALTER TABLE "Invoice" DROP CONSTRAINT "FK_f05e43ea24cbacc2068c6781941"`);
        await queryRunner.query(`ALTER TABLE "Order" DROP CONSTRAINT "FK_cdc25a0a42e8f451020a26680b3"`);
        await queryRunner.query(`ALTER TABLE "Product" DROP CONSTRAINT "FK_de75905c3b4987f4b5bb1472644"`);
        await queryRunner.query(`ALTER TABLE "Cart" DROP CONSTRAINT "FK_c93d6f0ae7b8bcae9439e871ab1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0fc996e42b6330c97f8cffbddf"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e6ce39be5d354954a88ded1eba"`);
        await queryRunner.query(`DROP TABLE "cart_products_product"`);
        await queryRunner.query(`DROP TABLE "Payment"`);
        await queryRunner.query(`DROP TABLE "OrderInvoice"`);
        await queryRunner.query(`DROP TABLE "User"`);
        await queryRunner.query(`DROP TABLE "Withdrawl"`);
        await queryRunner.query(`DROP TABLE "Invoice"`);
        await queryRunner.query(`DROP TABLE "Order"`);
        await queryRunner.query(`DROP TABLE "Product"`);
        await queryRunner.query(`DROP TABLE "Cart"`);
    }

}
